---
# This playbook does following:

- hosts: all
  become: true
  become_method: sudo
  environment:
    PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"
    PIP_BREAK_SYSTEM_PACKAGES: 1
    TA_VERSION: 'phase-0.1'
    TA_REVISION: '9ef0264'
    # PERCONA_TELEMETRY_CHECK_INTERVAL: 10

  tasks:
  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

  - name: enforce SELinux on CentOS
    selinux:
      policy: targeted
      state: enforcing
    when: ansible_os_family == "RedHat"

  - name: get selinux status
    command: sestatus
    register: selinux_status
    when: ansible_os_family == "RedHat"

  - name: list selinux status
    debug:
      var: selinux_status
    when: ansible_os_family == "RedHat"

  - name: install python3-pip rpm packages
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
      - python3-pip
    when: ansible_os_family == "RedHat"

  - name: install python3-pip deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      packages:
      - python3-pip
    when: ansible_os_family == "Debian"

  - name: install pytest
    pip:
      name: "{{ packages }}"
      extra_args: --user
    vars:
      packages:
      - pytest-testinfra
      - pytest

  - name: Install percona release
    include_tasks: ../tasks/install_percona-release.yml

  - name: Install percona release
    include_tasks: ../tasks/install_percona-release.yml

  - name: enable percona-release tools experimental
    command: percona-release enable tools experimental

#   - name: Update cache
#     command: apt update
#     when: ansible_os_family == "Debian"

  - name: install Telemetry Agent deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      packages:
      - percona-telemetry-agent
    when: ansible_os_family == "Debian"

  - name: install Telemetry Agent rpm packages
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
      - percona-telemetry-agent
    when: ansible_os_family == "RedHat"

  - block:
      - name: run pytest
        command: python3 -m pytest -v /package-testing/telemetry/tests/test_telemetry_dynamic_package.py
        register: pytest_out
        no_log: True
    always:
      - name: debug pytest stderr
        debug:
          var: pytest_out.stderr_lines

      - name: debug pytest stdout
        debug:
          var: pytest_out.stdout_lines
