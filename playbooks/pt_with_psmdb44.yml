---
# This playbook does following:
#   enables psmdb main repo
#   installs latest version of Percona Server for MongoDB 44 (psmdb44)
#   enables Percona tools repository
#   installs latest version of Percona-Toolkit (pt)
#   starts server and runs pt-mongodb-summary tool

- hosts: all
  become: true
  become_method: sudo

  tasks:
  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

# Enable psmdb repo and install psmdb
  - name: include tasks for enabling psmdb 44 repo
    include_tasks: ../tasks/enable_psmdb_repo.yml
    vars:
      psmdb_repo: "psmdb-44 release"

  - name: include tasks for installing psmdb 44 packages
    include_tasks: ../tasks/install_psmdb.yml
    vars:
      packages: percona-server-mongodb

# Start psmdb service
  - name: start mongod service
    service: 
      name: mongod
      state: started

# Enable only tools repo to install pt
  - name: include tasks for enabling tools testing repo
    include_tasks: ../tasks/enable_only_testing_repo_for_pt.yml
    vars:
      repo_name: tools
    when: lookup('env', 'install_repo') == "testing" or lookup('env', 'install_repo') == ""

  - name: include tasks for enabling tools main repo
    include_tasks: ../tasks/enable_only_main_repo_for_pt.yml
    vars:
      repo_name: tools
    when: lookup('env', 'install_repo') == "main"

  - name: include tasks for enabling  tools experimental repo
    include_tasks: ../tasks/enable_only_experimental_repo_for_pt.yml
    vars:
      repo_name: tools
    when: lookup('env', 'install_repo') == "experimental"

# Install pt and run tool
  - name: include tasks for pt installation
    include_tasks: ../tasks/install_pt.yml

#DEBUG check repos
  - name: check enabled repos
    command: percona-release show
    register: repo_list

  - name: output repos list
    debug:
      var: repo_list.stdout_lines
  #DEBUG check repos

#DEBUG list percona packages
  - name: list installed percona packages
    shell: apt list --installed|egrep -i "percona|mysql"
    register: packages_list
    when: ansible_os_family == "Debian"

  - name: output percona installed packages list
    debug:
      var: packages_list.stdout_lines
    when: ansible_os_family == "Debian"

  - name: list installed percona packages
    shell: yum list installed|egrep -i "percona|mysql"
    register: packages_list
    when: ansible_os_family == "RedHat"

  - name: output percona installed packages list
    debug:
      var: packages_list.stdout_lines
    when: ansible_os_family == "RedHat"
  #DEBUG list percona packages

#   remove till the PT-1959 is fixed
#  - name: check that pt version is correct
#    command: /package-testing/version_check.sh pt

  - name: run pt-mongodb-summary
    command: pt-mongodb-summary
    register: pt_output

#DEBUG pt output
  - name: check pt output
    debug:
      var: pt_output
  #DEBUG pt output

#  - name: remove pt packages
#    include: ../tasks/remove_pt.yml

