---
# This playbook does following:
#   enables Percona testing repository
#   installs latest version of PS 8.0, PT and PXB 8.0
#   does some tests

# Cosmic is still missing python
# import_playbook: test_prep.yml

- hosts: all
  become: true
  become_method: sudo
  vars:
    install_mysql_shell: "{{ lookup('env', 'install_mysql_shell', default='') }}"
  environment:
    install_mysql_shell: '{{ install_mysql_shell }}'
    PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"
    # PERCONA_TELEMETRY_CHECK_INTERVAL: 10

  tasks:
  - name: include tasks for test env setup
    include_tasks: ../tasks/test_prep.yml

  - name: disable the mysql module on RHEL/CentOS 8
    command: /usr/bin/dnf module disable mysql -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: enforce SELinux on CentOS
    selinux:
      policy: targeted
      state: enforcing
    when: ansible_os_family == "RedHat"

  - name: get selinux status
    command: sestatus
    register: selinux_status
    when: ansible_os_family == "RedHat"

  - name: list selinux status
    debug:
      var: selinux_status
    when: ansible_os_family == "RedHat"

  - name: install PPG repository package
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      packages:
      - postgresql-common
    when: ansible_os_family == "Debian"

  - name: install PPG apt repository
    command: /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh
    when: ansible_os_family == "Debian"

  - name: install Percona Server rpm packages
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
      - "https://download.postgresql.org/pub/repos/yum/reporpms/EL-{{ ansible_distribution_major_version }}-x86_64/pgdg-redhat-repo-latest.noarch.rpm"
    when: ansible_os_family == "RedHat"

  - name: disable the built-in PostgreSQL module
    command: /usr/bin/dnf -qy module disable postgresql
    when: ansible_os_family == "RedHat"

  - name: install PPG deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      packages:
      - postgresql-16
      - patroni 
      - postgresql-16-pgaudit
      - pgbadger 
      - pgbouncer
      - postgresql-16-pgpool2
      - postgresql-16-repack
      - postgis 
      - postgresql-16-wal2json
      - pgbackrest
    when: ansible_os_family == "Debian"

  - name: install PPG rpm packages
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
      skip_broken: yes
    vars:
      packages:
      - patroni
      - pgaudit_16
      - pgbackrest
      - pgbouncer 
      - pg_repack_16 
      - pgbadger 
      - pgpool-II
      - postgis34_16 
      - wal2json_16 
    when: ansible_os_family == "RedHat"