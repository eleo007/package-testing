
  - name: setup epel 7 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "7"

  - name: setup epel 7 repo for Amazon Linux 2
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm state=present
    when: ansible_distribution == "Amazon" and ansible_distribution_major_version == "2"

  - name: install GPG key for epel 8
    rpm_key:
      state: present
      key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-8
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: install GPG key for Percona repos
    rpm_key:
      state: present
      key: https://repo.percona.com/yum/RPM-GPG-KEY-Percona
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version >= "8"

  - name: update mirrors for CentOS8
    shell: sed -i 's/mirror\.centos\.org/vault\.centos\.org/g;s/\#baseurl=/baseurl=/g;s/mirrorlist=/#mirrorlist=/g' /etc/yum.repos.d/CentOS*.repo
    when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "8"

  - name: setup epel 8 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: install GPG key for epel 9
    rpm_key:
      state: present
      key: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-9
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "9"

  - name: setup epel 9 repo
    yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm state=present
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "9"

  - name: allow release-info to change for apt repositories
    command: apt-get update -y --allow-releaseinfo-change
    when: ansible_os_family == "Debian" and ansible_distribution_release == "buster"

  - name: install needed packages for running tests with apt
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      packages:
      - unzip
      - wget
      - gnupg
      - rsync
      - jq # for exporter end point metric fetch
      - acl
    retries: 60
    delay: 10
    register: result
    until: result is not failed
    when: ansible_os_family == "Debian"

  - name: install needed packages for running tests with yum
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - pv
      - libselinux-python
      - unzip
      - wget
      - rsync
      - jq # for exporter end point metric fetch
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int <= 7

  - name: install needed packages for running tests with yum on RHEL 8+
    yum:
      name: "{{ packages }}"
      state: latest
    vars:
      packages:
      - unzip
      - wget
      - jq # for exporter end point metric fetch
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version|int >= 8

  - name: download package-testing repo branch with wget
    command: "{{ item }}"
    with_items:
    - rm -rf /package-testing
    - rm -f master.zip
    - wget --no-check-certificate -O master.zip https://github.com/eleo007/package-testing/archive/telemetry.zip
    - unzip master.zip
    - rm -f master.zip
    - mv package-testing-telemetry /package-testing
    when: lookup('env', 'USE_LOCAL_PKG_TEST') == "" or lookup('env', 'USE_LOCAL_PKG_TEST') == "0"

  - name: install latest bats from github
    command: "{{ item }}"
    with_items:
    - rm -f master.zip
    - wget --no-check-certificate -O master.zip https://github.com/sstephenson/bats/archive/master.zip
    - unzip master.zip
    - rm -f master.zip
    - bats-master/install.sh /usr/local
    - rm -rf bats-master

  - name: include tasks for listing already installed packages
    include_tasks: list_installed_packages.yml

  - name: get selinux status
    command: sestatus
    register: selinux_status
    when: ansible_os_family == "RedHat"

  - name: list selinux status
    debug:
      var: selinux_status
    when: ansible_os_family == "RedHat"

  - name: get list of enabled dnf modules on rhel 8
    command: dnf module list --enabled
    register: enabled_dnf_modules
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: list enabled dnf modules on rhel 8
    debug:
      var: enabled_dnf_modules
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"
