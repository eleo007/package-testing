#DEBUG list percona packages
  - name: list installed percona packages
    shell: apt list --installed|egrep -i "percona|mysql"
    register: packages_list
    when: ansible_os_family == "Debian"
    ignore_errors: yes

  - name: output percona installed packages list
    debug:
      var: packages_list
    when: ansible_os_family == "Debian"
    ignore_errors: yes

  - name: list installed percona packages
    shell: yum list installed|egrep -i "percona|mysql"
    register: packages_list
    when: ansible_os_family == "RedHat"
    ignore_errors: yes

  - name: output percona installed packages list
    debug:
      var: packages_list
    when: ansible_os_family == "RedHat"
    ignore_errors: yes
  #DEBUG list percona packages

# Enable only tools repo to install pt
  - name: include tasks for enabling "{{ repo_name }}" test repo
    include_tasks: ../tasks/enable_only_testing_repo_for_pt.yml
    when: lookup('env', 'install_repo') == "testing" or lookup('env', 'install_repo') == ""

  - name: include tasks for enabling "{{ repo_name }}" main repo
    include_tasks: ../tasks/enable_only_main_repo_for_pt.yml
    when: lookup('env', 'install_repo') == "main"

  - name: include tasks for enabling  "{{ repo_name }}" experimental repo
    include_tasks: ../tasks/enable_only_experimental_repo_for_pt.yml
    when: lookup('env', 'install_repo') == "experimental"

  - name: include tasks for pt installation
    include_tasks: ../tasks/install_pt.yml

#DEBUG check repos
  - name: check enabled repos
    command: percona-release show
    register: repo_list

  - name: output repos list
    debug:
      var: repo_list.stdout_lines
  #DEBUG check repos

#DEBUG list percona packages
  - name: list installed percona packages
    shell: apt list --installed|egrep -i "percona|mysql"
    register: packages_list
    when: ansible_os_family == "Debian"

  - name: output percona installed packages list
    debug:
      var: packages_list.stdout_lines
    when: ansible_os_family == "Debian"

  - name: list installed percona packages
    shell: yum list installed|egrep -i "percona|mysql"
    register: packages_list
    when: ansible_os_family == "RedHat"

  - name: output percona installed packages list
    debug:
      var: packages_list.stdout_lines
    when: ansible_os_family == "RedHat"
  #DEBUG list percona packages

# remove till the PT-1959 is fixed
  - name: check that pt version is correct
    command: ../version_check.sh
#DEBUG check version
    register: check_output

  - name: output percona installed packages list
    debug:
      var: check_output
    #DEBUG check version

  - name: remove pt packages
    include: ../tasks/remove_pt.yml