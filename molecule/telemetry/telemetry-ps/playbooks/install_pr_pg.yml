  - name: enable the ppg repo ppg-16
    command: percona-release enable ppg-16
    when: ansible_os_family == "Debian"

  - name: install PPG deb packages
    apt:
      name: "{{ packages }}"
      update_cache: yes
      state: latest
    vars:
      packages:
      - percona-ppg-server-16
      - percona-pgbouncer
      - percona-patroni
      - percona-postgresql-16-pgaudit
      - percona-pgaudit16-set-user
      - percona-pgbadger
      - percona-pgbouncer
      - percona-pg-gather
      - percona-pgpool2
      - percona-postgresql-16-repack
      - percona-pg-stat-monitor16
      - percona-postgis
      - percona-postgresql-16-wal2json
      - percona-pgbackrest
      - etcd
    when: ansible_os_family == "Debian"

  - name: setup the ppg repo ppg-16 for rhel
    command: percona-release setup -y ppg-16
    when: ansible_os_family == "RedHat"

  - name: Clean dnf oracle linux
    become: true
    command: dnf clean all -y
    when: ansible_os_family == "RedHat" and
      (ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9")

  - name: Enable powertools on oracle linux 8
    become: true
    command: dnf config-manager --set-enabled ol8_codeready_builder
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8" and ansible_distribution == "OracleLinux"

  - name: Enable powertools on oracle linux 9
    become: true
    command: dnf config-manager --set-enabled ol9_codeready_builder
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "9" and ansible_distribution == "OracleLinux"

  - name: Enable powertools on Rocky Linux 8
    command: "{{ item }}" 
    with_items:
      - dnf install dnf-plugins-core
      - dnf module enable llvm-toolset
      - dnf config-manager --set-enabled powertools
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8" and ansible_distribution == "Rocky"

  - name: Enable powertools on Rocky Linux 9
    command: "{{ item }}" 
    with_items:
      - dnf install dnf-plugins-core
      - dnf module enable llvm-toolset
      - dnf config-manager --set-enabled crb
      - dnf install perl-IPC-Run -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "9" and ansible_distribution == "Rocky"

  - name: Enable powertools on RHEL 8
    become: true
    command: yum --enablerepo=codeready-builder-for-rhel-8-rhui-rpms
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8" and ansible_distribution == "RedHat"

  - name: Enable powertools on RHEL 9
    become: true
    command: yum --enablerepo=codeready-builder-for-rhel-9-rhui-rpms
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "9" and ansible_distribution == "RedHat"

  - name: Disable dnf postgresql for RHEL8
    become: true
    command: dnf module disable postgresql -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: Disable llvm-toolset dnf module for RHEL8
    become: true
    command: dnf module disable llvm-toolset -y
    when: ansible_os_family == "RedHat" and ansible_distribution_major_version == "8"

  - name: install PPG rpm packages
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
      - percona-ppg-server16
    when: ansible_os_family == "RedHat"

  - name: Setting facts so that they will be persisted in the fact cache
    ansible.builtin.set_fact:
      pgaudit_rhel_package_name: "percona-pgaudit16"
      postgis_rhel_package_name_prefix: "percona-postgis33_16"

  - name: Install pgaudit RHEL
    yum:
      name: "{{ pgaudit_rhel_package_name }}"
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install pgbackrest RHEL
    yum:
      name: percona-pgbackrest
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install pgrepack RHEL
    yum:
      name: percona-pg_repack16
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install pg-stat-monitor RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-pg_stat_monitor16
        # - percona-pg_stat_monitor16-debuginfo
    when: ansible_os_family == "RedHat"

  - name: Install pgbadger RHEL
    yum:
      name: percona-pgbadger
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install percona-pgaudit16_set_user RHEL
    yum:
      name: percona-pgaudit16_set_user
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install percona-pgbouncer RHEL
    yum:
      name: percona-pgbouncer
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install percona-pgpool RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
        - percona-pgpool-II-pg16
        - percona-pgpool-II-pg16-extensions
    when: ansible_os_family == "RedHat"

  - name: Install percona-postgis RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
      - "{{postgis_rhel_package_name_prefix}}"
    when: ansible_distribution_major_version == "7"

  - name: Enable llvm-toolset for RHEL8 to install PostGIS
    become: true
    command: dnf module enable llvm-toolset -y
    when: ansible_os_family == "RedHat"

  - name: Install percona-postgis RHEL
    yum:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
    vars:
      packages:
      - "{{postgis_rhel_package_name_prefix}}"
    when: ansible_distribution_major_version == "8" or ansible_distribution_major_version == "9"

  - name: Install percona-wal2json16 RHEL
    yum:
      name: percona-wal2json16
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: Install percona-pg_gather RHEL
    yum:
      name: percona-pg_gather
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"
  
  - name: Install percona-pg_gather RHEL
    yum:
      name: etcd
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"


####################OLD STAFF
  # - name: Install patroni RPM
  #   yum:
  #     name: percona-patroni
  #     state: latest
  #     update_cache: yes
  #   when: ansible_os_family == "RedHat"

  # - name: make changes for pgpool2
  #   command: sudo dnf config-manager --set-enabled codeready-builder-for-rhel-9-x86_64-rpms
  #   when: ansible_os_family == "RedHat"

  # - name: install PPG rpm packages
  #   yum:
  #     name: "{{ packages }}"
  #     state: latest
  #     update_cache: yes
  #   vars:
  #     packages:
  #      - percona-pgpool-II
  #   when: ansible_os_family == "RedHat"


  # - name: make changes for postgis
  #   command: "{{ item }}" 
  #   with_items:
  #     - yum install epel-release
  #     - dnf module enable -y llvm-toolset
  #     - dnf config-manager --set-enabled ol8_codeready_builder
  #   when: ansible_os_family == "RedHat"

  # - name: install PPG rpm packages
  #   yum:
  #     name: "{{ packages }}"
  #     state: latest
  #     update_cache: yes
  #   vars:
  #     packages:
  #     - percona-postgis33
  #   when: ansible_os_family == "RedHat"

  # - name: Update PERCONA_TELEMETRY_CHECK_INTERVAL default
  #   ansible.builtin.lineinfile:
  #     path: /etc/default/percona-telemetry-agent
  #     regex: 'PERCONA_TELEMETRY_CHECK_INTERVAL=86400'
  #     line: PERCONA_TELEMETRY_CHECK_INTERVAL=10
  #   when: ansible_os_family == "Debian"

  # - name: Update PERCONA_TELEMETRY_URL default
  #   ansible.builtin.lineinfile:
  #     path: /etc/default/percona-telemetry-agent
  #     regex: 'PERCONA_TELEMETRY_URL=https://check.percona.com/v1/telemetry/GenericReport'
  #     line: PERCONA_TELEMETRY_URL=https://check-dev.percona.com/v1/telemetry/GenericReport
  #   when: ansible_os_family == "Debian"


  # - name: Update PERCONA_TELEMETRY_CHECK_INTERVAL default
  #   ansible.builtin.lineinfile:
  #     path: /etc/sysconfig/percona-telemetry-agent
  #     regex: 'PERCONA_TELEMETRY_CHECK_INTERVAL=86400'
  #     line: PERCONA_TELEMETRY_CHECK_INTERVAL=10
  #   when: ansible_os_family == "RedHat"

  # - name: Update PERCONA_TELEMETRY_URL default
  #   ansible.builtin.lineinfile:
  #     path: /etc/sysconfig/percona-telemetry-agent
  #     regex: 'PERCONA_TELEMETRY_URL=https://check.percona.com/v1/telemetry/GenericReport'
  #     line: PERCONA_TELEMETRY_URL=https://check-dev.percona.com/v1/telemetry/GenericReport
  #   when: ansible_os_family == "RedHat"

  # - name: install haproxy packages
  #   apt:
  #     name: "{{ packages }}"
  #     update_cache: yes
  #     state: latest
  #   vars:
  #     packages:
  #     - haproxy
  #   when: ansible_os_family == "Debian"

  # - name: install haproxy packages
  #   yum:
  #     name: "{{ packages }}"
  #     state: latest
  #     update_cache: yes
  #     skip_broken: yes
  #   vars:
  #     packages:
  #     - haproxy
  #     # - percona-postgis*
  #     - etcd
  #   when: ansible_os_family == "RedHat"

  # - name: ensures /usr/local/percona/telemetry/ps dir exists
  #   file: 
  #     path: "/usr/local/percona/telemetry/ps"
  #     state: directory

  # - name: Create test file
  #   copy:
  #     content: |
  #               {
  #               "ansible_test_string":"ansible_test_string"
  #               }
  #     dest: "/usr/local/percona/telemetry/ps/{{ ansible_date_time.epoch }}-test_content.json"
################################333

  # - name: install PPG deb packages
  #   apt:
  #     name: "{{ packages }}"
  #     update_cache: yes
  #     state: latest
  #   vars:
  #     packages:
  #     - postgresql-16
  #     - patroni + 
  #     - postgresql-16-pgaudit
  #     - pgbadger + 
  #     - pgbouncer +
  #     - postgresql-16-pgpool2
  #     - postgresql-16-repack
  #     - postgis + ? 
  #     - postgresql-16-wal2json
  #     - pgbackrest +
  #   when: ansible_os_family == "Debian"

  # - name: install PPG rpm packages
  #   yum:
  #     name: "{{ packages }}"
  #     state: latest
  #     update_cache: yes
  #     skip_broken: yes
  #   vars:
  #     packages:
  #     - patroni +
  #     - pgaudit_16 +
  #     - pgbackrest +
  #     - pgbouncer + 
  #     - pg_repack_16 + 
  #     - pgbadger + 
  #     - pgpool-II +
  #     - postgis34_16 - 
  #     - wal2json_16 - 
  #     # - percona-postgis*
  #     - etcd
  #   when: ansible_os_family == "RedHat"
